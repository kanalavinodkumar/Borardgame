Installation Guide: https://github.com/jaiswaladi246/DevOps_Shack_Ultimate_Pipeline_12_march.git

----------------------------------------------------------------------------------------------------------------------------------------------
K8
---------------------
sudo apt-get update
sudo apt install docker.io -y
sudo chmod 666 /var/run/docker.sock
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
sudo mkdir -p -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
sudo apt install -y kubeadm=1.28.1-1.1 kubelet=1.28.1-1.1 kubectl=1.28.1-1.1

on master only
----------------------------
sudo kubeadm init --pod-network-cidr=10.244.0.0/16
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.49.0/deploy/static/provider/baremetal/deploy.yaml

for security in K8
-------------------
wget https://github.com/Shopify/kubeaudit/releases/download/v0.22.1/kubeaudit_0.22.1_linux_amd64.tar.gz
tar -xvzf kubeaudit_0.22.1_linux_amd64.tar.gz
sudo mv kubeaudit /usr/local/bin/
kubeaudit all




---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Nexus/SonarQube -> using docker image
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#!/bin/bash

# Update package manager repositories
sudo apt-get update

# Install necessary dependencies
sudo apt-get install -y ca-certificates curl

# Create directory for Docker GPG key
sudo install -m 0755 -d /etc/apt/keyrings

# Download Docker's GPG key
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc

# Ensure proper permissions for the key
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add Docker repository to Apt sources
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
$(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Update package manager repositories
sudo apt-get update

sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 

sudo chmod 666 /var/run/docker.sock			#for users to execute docker commands by default only root can execute

docker run -d --name sonar -p 9000:9000 sonarqube:lts-community     #Sonarqube

docker run -d --name nexus -p 8081:8081 sonatype/nexus3				#Nexus

-------------------------------------------------------------------------------------------------------------------------------------------------------------
Jenkins
-------------------------------------------------------------------------------------------------------------------------------------------------------------
#!/bin/bash

# Install OpenJDK 17 JRE Headless
sudo apt install openjdk-17-jre-headless -y

# Download Jenkins GPG key
sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key

# Add Jenkins repository to package manager sources
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null

# Update package manager repositories
sudo apt-get update

# Install Jenkins
sudo apt-get install jenkins -y

jenkins default port 8080

install docker aswell


plugins
-------

Eclipse Temurin installer
Config File Provider
Pipeline Maven Integration
SonarQube Scanner
Blue Ocean
Docker
Docker Pipeline
Kubernetes Client API
Kubernetes Credentials
Kubernetes
Kubernetes CLI
Maven Integration
Nexus Artifact Uploader
Pipeline Utility Steps

configure plugins
------------------
manage jenkins ->Tools

JDK
Maven
Docker
Sonar-scanner


Trivy
-------
sudo apt-get install wget apt-transport-https gnupg lsb-release
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
sudo apt-get update
sudo apt-get install trivy -y

----------------------------------------------------------------------------------------------------------------------------------------------------------
create sonarqube webhook
administration->configuration->webhook
http://13.201.2.163:8080/sonarqube-webhook/

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

hnou iayc neof vffx			-> GMail SMTP